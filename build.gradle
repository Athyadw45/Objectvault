plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.springdoc.openapi-gradle-plugin" version "1.8.0"
	id("com.diffplug.spotless") version "6.25.0"
}

group = 'com.objectvault'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
}

dependencies {

	//runtime dependancies
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.3.0'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '3.2.3'
	implementation 'com.google.guava:guava:33.0.0-jre'
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springframework.security:spring-security-core:6.2.4"
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	implementation 'org.springdoc:springdoc-openapi-starter-common:2.5.0'
	implementation 'io.minio:minio:8.4.3'
	implementation("io.minio:minio:8.5.11")
	implementation 'org.apache.commons:commons-collections4:4.4'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.3.5'
	implementation 'org.apache.commons:commons-pool2:2.12.0'



	//compile dependancies
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'

	testCompileOnly 'org.projectlombok:lombok:1.18.30'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

}

tasks.named('test') {
	useJUnitPlatform()
}
bootRun {

}

spotless {
	java {
		// Use the default importOrder configuration
		importOrder()
		removeUnusedImports()

		// Cleanthat will refactor your code, but it may break your style: apply it before your formatter
		cleanthat()          // has its own section below

		// Choose one of these formatters.
		googleJavaFormat()   // has its own section below

		formatAnnotations()  // fixes formatting of type annotations, see below

		licenseHeader '/* (C) $YEAR */' // or licenseHeaderFile
	}
}
